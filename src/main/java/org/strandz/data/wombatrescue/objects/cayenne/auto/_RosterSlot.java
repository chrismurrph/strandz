package org.strandz.data.wombatrescue.objects.cayenne.auto;

import java.util.Date;

import org.apache.cayenne.CayenneDataObject;
import org.strandz.data.wombatrescue.objects.cayenne.DayInWeek;
import org.strandz.data.wombatrescue.objects.cayenne.MonthInYear;
import org.strandz.data.wombatrescue.objects.cayenne.NumDaysInterval;
import org.strandz.data.wombatrescue.objects.cayenne.Override;
import org.strandz.data.wombatrescue.objects.cayenne.WeekInMonth;
import org.strandz.data.wombatrescue.objects.cayenne.WhichShift;
import org.strandz.data.wombatrescue.objects.cayenne.Worker;

/**
 * Class _RosterSlot was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _RosterSlot extends CayenneDataObject {

    public static final String DISABLED_PROPERTY = "disabled";
    public static final String JDOCLASS_PROPERTY = "jdoclass";
    public static final String JDOVERSION_PROPERTY = "jdoversion";
    public static final String MONTHLY_RESTART_PROPERTY = "monthlyRestart";
    public static final String NOT_AVAILABLE_PROPERTY = "notAvailable";
    public static final String SPECIFIC_DATE_PROPERTY = "specificDate";
    public static final String START_DATE_PROPERTY = "startDate";
    public static final String ACTUAL_DAY_IN_WEEK_PROPERTY = "actualDayInWeek";
    public static final String ACTUAL_NOT_IN_MONTH_PROPERTY = "actualNotInMonth";
    public static final String ACTUAL_NUM_DAYS_INTERVAL_PROPERTY = "actualNumDaysInterval";
    public static final String ACTUAL_ONLY_IN_MONTH_PROPERTY = "actualOnlyInMonth";
    public static final String ACTUAL_OVERRIDES_OTHERS_PROPERTY = "actualOverridesOthers";
    public static final String ACTUAL_WEEK_IN_MONTH_PROPERTY = "actualWeekInMonth";
    public static final String ACTUAL_WHICH_SHIFT_PROPERTY = "actualWhichShift";
    public static final String WORKER_PROPERTY = "worker";

    public static final String JDOID_PK_COLUMN = "JDOID";

    public void setDisabled(boolean disabled) {
        writeProperty("disabled", disabled);
    }
	public boolean isDisabled() {
        Boolean value = (Boolean)readProperty("disabled");
        return (value != null) ? value.booleanValue() : false;
    }

    public void setJdoclass(String jdoclass) {
        writeProperty("jdoclass", jdoclass);
    }
    public String getJdoclass() {
        return (String)readProperty("jdoclass");
    }

    public void setJdoversion(Integer jdoversion) {
        writeProperty("jdoversion", jdoversion);
    }
    public Integer getJdoversion() {
        return (Integer)readProperty("jdoversion");
    }

    public void setMonthlyRestart(boolean monthlyRestart) {
        writeProperty("monthlyRestart", monthlyRestart);
    }
	public boolean isMonthlyRestart() {
        Boolean value = (Boolean)readProperty("monthlyRestart");
        return (value != null) ? value.booleanValue() : false;
    }

    public void setNotAvailable(boolean notAvailable) {
        writeProperty("notAvailable", notAvailable);
    }
	public boolean isNotAvailable() {
        Boolean value = (Boolean)readProperty("notAvailable");
        return (value != null) ? value.booleanValue() : false;
    }

    public void setSpecificDate(Date specificDate) {
        writeProperty("specificDate", specificDate);
    }
    public Date getSpecificDate() {
        return (Date)readProperty("specificDate");
    }

    public void setStartDate(Date startDate) {
        writeProperty("startDate", startDate);
    }
    public Date getStartDate() {
        return (Date)readProperty("startDate");
    }

    public void setActualDayInWeek(DayInWeek actualDayInWeek) {
        setToOneTarget("actualDayInWeek", actualDayInWeek, true);
    }

    public DayInWeek getActualDayInWeek() {
        return (DayInWeek)readProperty("actualDayInWeek");
    }


    public void setActualNotInMonth(MonthInYear actualNotInMonth) {
        setToOneTarget("actualNotInMonth", actualNotInMonth, true);
    }

    public MonthInYear getActualNotInMonth() {
        return (MonthInYear)readProperty("actualNotInMonth");
    }


    public void setActualNumDaysInterval(NumDaysInterval actualNumDaysInterval) {
        setToOneTarget("actualNumDaysInterval", actualNumDaysInterval, true);
    }

    public NumDaysInterval getActualNumDaysInterval() {
        return (NumDaysInterval)readProperty("actualNumDaysInterval");
    }


    public void setActualOnlyInMonth(MonthInYear actualOnlyInMonth) {
        setToOneTarget("actualOnlyInMonth", actualOnlyInMonth, true);
    }

    public MonthInYear getActualOnlyInMonth() {
        return (MonthInYear)readProperty("actualOnlyInMonth");
    }


    public void setActualOverridesOthers(Override actualOverridesOthers) {
        setToOneTarget("actualOverridesOthers", actualOverridesOthers, true);
    }

    public Override getActualOverridesOthers() {
        return (Override)readProperty("actualOverridesOthers");
    }


    public void setActualWeekInMonth(WeekInMonth actualWeekInMonth) {
        setToOneTarget("actualWeekInMonth", actualWeekInMonth, true);
    }

    public WeekInMonth getActualWeekInMonth() {
        return (WeekInMonth)readProperty("actualWeekInMonth");
    }


    public void setActualWhichShift(WhichShift actualWhichShift) {
        setToOneTarget("actualWhichShift", actualWhichShift, true);
    }

    public WhichShift getActualWhichShift() {
        return (WhichShift)readProperty("actualWhichShift");
    }


    public void setWorker(Worker worker) {
        setToOneTarget("worker", worker, true);
    }

    public Worker getWorker() {
        return (Worker)readProperty("worker");
    }


}
